const grammer = [ 
//	inst				op			type						argTypes																		subCode
// ------------------------------------------------------------------------------------------------------
	['INIT',			'00',		'cmd',					[]],
	['INITALK',		'FE',		'cmd',					[]],
	['SETR',			'01',		'setAddr',			['REG_ADDR']],
	['GETR',			'6F',		'getVal',				[]],
	['SAVE',			'04',		'prgCpy',				[]],
	['LOAD',			'07',		'prgLd',				[]],
	['PRN',				'06',		'prnBuf',				[]],
	['HALT',			'00',		'cmd',					[]],
	['PRAR',			'41',		'prnChar',			['REG_VAL']],
	['PRAM',			'42',		'prnChar',			['MEM_VAL']],
	['LD',				'08',		'setRegVal',		['MEM_VAL']],
	['ST',				'09',		'setMemVal',		['MEM_ADDR']],
	['LDRI',			'12',		'setRegVal',		['MEM_ADDR']],
	['STRI',			'13',		'setMemVal',		['MEM_ADDR']],
	['STOR',			'F5',		'setMemVal',		[]],
	['LODM',			'F6',		'ldMemVal',			[]],
	['POP',				'0A',		'stack',				[]],
	['PUSH',			'0B',		'stack',				[]],
	['CALL',			'0F',		'pointer',			['MEM_VAL_ADDR']],
	['RET',				'10',		'pointer',			[]],
	['PASS',			'5E',		'pointer',			['MEM_VAL_ADDR']],
	['JMP',				'11',		'pointer',			['MEM_VAL_ADDR']],
	['JTL',				'00',		'pointer',			[]],
	['JEQ',				'14',		'pointerCond',	[]],
	['JNE',				'15',		'pointerCond',	['MEM_VAL', 'MEM_VAL', 'MEM_VAL_ADDR']],
	['JRNE',			'95',		'pointerCond',	['MEM_VAL_ADDR']],
	['JREQ',			'97',		'pointerCond',	['MEM_VAL_ADDR']],
	['CMP',				'16',		'math',					[]],
	['ADD',				'0C',		'math',					['MEM_VAL', 'MEM_VAL']],
	['SUB',				'0D',		'math',					['MEM_VAL', 'MEM_VAL']],
	['MUL',				'05',		'math',					['MEM_VAL', 'MEM_VAL']],
	['DIV',				'0E',		'math',					['MEM_VAL', 'MEM_VAL']],
	['LBL',				'60',		'flow',					[]],
	['LBLJMP',		'17',		'flow',					['MEM_VAL_ADDR']],
	['LBSET',			'18',		'flow',					['MEM_VAL']],
	['SETI',			'20',		'interupt',			['MEM_VAL', 'MEM_VAL_ADDR']],
	['GETI',			'21',		'interupt',			['MEM_VAL']],
	['RETI',			'EE',		'interupt',			[]],
	['INPT',			'7E',		'readBuf',			['MEM_VAL_EXT']],
	['OTPT',			'7F',		'writeBuf',			[]],
	['RELAD',			'11',		'pointer',			[]],
	['DEF',				null,		'flow',					['STR_TOKEN']]
]

module.exports = grammer;